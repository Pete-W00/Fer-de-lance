# iris dataset - k-means clustering


import sklearn
from sklearn.cluster import KMeans
from sklearn.preprocessing import LabelEncoder

import pandas
from pandas import concat
from pandas import DataFrame

import seaborn as sns

from matplotlib import pyplot as plt

df = sns.load_dataset("iris")

pl = df.petal_length
pw = df.petal_width

df.drop(["sepal_length", "sepal_width", "petal_length", "petal_width"], axis = 1, inplace = True)

df = df.apply(LabelEncoder().fit_transform)              # Convert species strings to 0, 1 and 2

df2 = concat([pl, pw], axis = 1)

plt.scatter(df2.petal_length, df2.petal_width)           # 2 clusters will be Ok

kmeans = KMeans(n_clusters = 2)

yp = kmeans.fit_predict(df2)                             # assigns clusters - clusters are not equal in size

dfyp = DataFrame(yp)

df3 = concat([df2, dfyp, df], axis = 1)                  # dataframe of petal length, petal width, cluster number (0 or 1) and species number (0, 1 or 2)

df3 = df3.rename(columns = {0: "cluster"})

cluster0 = df3[df3.cluster == 0]
cluster1 = df3[df3.cluster == 1]


plt.scatter(cluster0.petal_length, cluster0.petal_width, color = "blue")
plt.scatter(cluster1.petal_length, cluster1.petal_width, color = "red")

plt.xlabel("petal length")
plt.ylabel("petal width")
plt.title("Petal dimensions")
plt.show()                         # plot without centroids

kmeans.cluster_centers_            # array([[1.49215686, 0.2627451],[4.92525253, 1.68181818]]) - coordinates of centroids


plt.scatter(cluster0.petal_length, cluster0.petal_width, color = "blue")
plt.scatter(cluster1.petal_length, cluster1.petal_width, color = "red")
plt.scatter([1.49215686, 4.92525253], [0.2627451, 1.68181818], color = "black", marker = "x")

plt.xlabel("petal length")
plt.ylabel("petal width")
plt.title("Petal dimensions")
plt.show()                         # plot with centroids

cluster0                           # all of species 0 ("setosa") except one species 1 ("versicolor")
cluster1                           # all but one of species 1 ("versicolor") and all of species 2 ("virginica")

# Basically clustering with k = 2 separated the setosa species from versicolor and virginica (with one versicolor included with the setosa)
# Normally it would be impossible to check the clusters as the data is normally without prior classification for unsupervised learning - e.g. there is no species column beforehand
